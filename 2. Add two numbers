# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        l3_head = None
        carry=0
        while (l1 and l2):
            a = l1.val
            b = l2.val
            c = (a+b+carry)%10
                
            if l3_head is None:
                l3_head = ListNode(c)
                l3_last = l3_head
            else:                
                l3_last.next = ListNode(c)
                l3_last = l3_last.next
            
            if a+b+carry > 9:
                carry = 1
            else:
                carry = 0
                
            l1=l1.next
            l2=l2.next
            
        while l1:
            a=l1.val
            c=(a+carry)%10
            if a+carry > 9:
                carry = 1
            else:
                carry = 0
                
            l3_last.next = ListNode(c)
            l3_last = l3_last.next
            
            l1 = l1.next
            
        while l2:
            b=l2.val
            c=(b+carry)%10
            if b+carry > 9:
                carry = 1
            else:
                carry = 0
                
            l3_last.next = ListNode(c)
            l3_last = l3_last.next
            
            l2 = l2.next
            
        if carry == 1:
            l3_last.next = ListNode(1)
            
        
        return l3_head
