# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def pathSum(self, root: TreeNode, sum: int) -> int:
        def counter(node, cumSums):
            if not node:
                return
            
            nonlocal c
            cumSums.append(0)
            
            for cumSum in cumSums:
                if cumSum + node.val == sum:
                    c += 1
            
            for i in range(len(cumSums)):
                cumSums[i] += node.val
                
            if node.left:
                counter(node.left, cumSums[:])
            
            if node.right:
                counter(node.right, cumSums[:])
                
            pass
        
        c = 0
        if root:
            counter(root, [])
        
        return c
        
