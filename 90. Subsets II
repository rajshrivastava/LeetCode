class Solution:
    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:
        def generate_subsets(cum_arr, next_index):
            nonlocal ans
            ans.append(cum_arr)
            if next_index == n:
                return
            for i in range(next_index, n):
                #print(ans,'...', cum_arr,'...', next_index)
                if i>next_index and nums[i] ==nums[i-1]:
                    continue
                generate_subsets(cum_arr + [nums[i]], i+1)
            
        nums.sort()
        n = len(nums)
        ans = [[]]
        for i in range(n):
            if i > 0 and nums[i] == nums[i-1]:
                continue
            generate_subsets([nums[i]], i+1)
        return ans
