class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        length = len(flowerbed)
        count = 0
        
        consecutive0s = 0
        i = 0
        while(i<length and flowerbed[i] == 0):
            consecutive0s += 1
            i+=1
        count += consecutive0s//2
        
        if i== length:
            if length%2:
                count += 1
            return count>=n
        
        consecutive0s = 0
        j = length - 1
        while(j>=0 and flowerbed[j] == 0):
            consecutive0s += 1
            j-=1
        count += consecutive0s//2
        
        while(i<j):
            consecutive0s = 0
            while(i<j and flowerbed[i] == 0):
                consecutive0s += 1
                i+=1
            count += max(0,(consecutive0s - 1)//2)
            i+=1
        
        return count>=n
                
